/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Archivos;
import Controlador.SSH;
import Modelo.Dispositivo;
import Modelo.Fecha;
import Modelo.HiloDispositivo;
import Modelo.HiloServidorCaido;
import Modelo.Usuario;
import Modelo.variablesGlobales;
import com.jcraft.jsch.JSchException;
import java.awt.event.ActionEvent;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * Esta clase contiene la interfaz gráfica de la pantalla principal
 * de nuestra aplicación. Permite escoger el tipo de dispositivo del que
 * se desea hacer respaldo
 * @author 
 * @version:5/8/2018
 */
/**
 *
 * @author JULIO
 */
public class LoginRespaldos extends javax.swing.JFrame {

    private HiloDispositivo h2;
    private HiloServidorCaido h1;

    /**
     *Constructor de la ventana de respaldos 
     */
    public LoginRespaldos() {
        initComponents();
        iniciarHilos();
        this.setLocationRelativeTo(null);
        actualizarTabla();
        actualizarBaseDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        imgLogin = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        estadoDispositivo = new javax.swing.JTable();
        txtUsuario = new org.edisoncor.gui.textField.TextField();
        labelUsuario = new javax.swing.JLabel();
        labelContra = new javax.swing.JLabel();
        txtContra = new org.edisoncor.gui.passwordField.PasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        btnSalir = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        labelDispositivo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 230, 172));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 51, 51));
        jPanel1.setInheritsPopupMenu(true);

        jPanel2.setBackground(new java.awt.Color(204, 0, 0));
        jPanel2.setInheritsPopupMenu(true);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sistemas Respaldos Diarios Automatico");

        imgLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/login.png"))); // NOI18N
        imgLogin.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        estadoDispositivo.setBackground(new java.awt.Color(255, 153, 153));
        estadoDispositivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dispositivo", "Estado"
            }
        ));
        estadoDispositivo.setGridColor(new java.awt.Color(255, 102, 51));
        estadoDispositivo.setSelectionForeground(new java.awt.Color(255, 102, 102));
        jScrollPane2.setViewportView(estadoDispositivo);

        txtUsuario.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtUsuario.setColumns(1);
        txtUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUsuario.setToolTipText("");
        txtUsuario.setBorde(1.0F);
        txtUsuario.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        labelUsuario.setBackground(new java.awt.Color(255, 255, 255));
        labelUsuario.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        labelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuario.setText("Usuario");

        labelContra.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        labelContra.setForeground(new java.awt.Color(255, 255, 255));
        labelContra.setText("Contraseña");

        txtContra.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtContra.setColumns(1);
        txtContra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtContra.setBorde(1.0F);
        txtContra.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        btnSalir.setBackground(new java.awt.Color(255, 51, 51));
        btnSalir.setFont(new java.awt.Font("Yu Gothic UI", 1, 16)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Cancelar.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnSalir.setBorderPainted(false);
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.setDefaultCapable(false);
        btnSalir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(255, 51, 51));
        btnLogin.setFont(new java.awt.Font("Yu Gothic UI", 1, 16)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/entrar.png"))); // NOI18N
        btnLogin.setText("Login");
        btnLogin.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnLogin.setBorderPainted(false);
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.setDefaultCapable(false);
        btnLogin.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        labelDispositivo.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        labelDispositivo.setForeground(new java.awt.Color(255, 255, 255));
        labelDispositivo.setText("DISPOSITIVOS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(116, 116, 116))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(imgLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(269, 269, 269))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(labelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelContra, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(labelDispositivo)
                        .addGap(56, 56, 56))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(labelDispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(imgLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelContra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleParent(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        if (!IngresoValido()) {
             JOptionPane.showMessageDialog(this.jPanel2, "Dispositivo Apagado");
            return;
        }
        Usuario us = new Usuario(txtUsuario.getText(), txtContra.getText());
        if (us.ExisteUsuario()) {
            variablesGlobales.DISPOSITIVO_ESTADO = estadoDispositivo.getValueAt(estadoDispositivo.getSelectedRow(), 1).toString().trim();
            if ("Off".equals(variablesGlobales.DISPOSITIVO_ESTADO)) {
                return;
            }
            IniciarRespaldos(us);

        } else if (HiloServidorCaido.ServerBaseDatosCaido) {
            JOptionPane.showMessageDialog(this.jPanel2, "SERVIDOR CAIDO !!!",
                "Error", JOptionPane.ERROR_MESSAGE);
            Reestablecer();
        } else {
            JOptionPane.showMessageDialog(null, "Usuario o Contraseña Incorrectos");
            Archivos.escribirDatos(txtUsuario.getText() + ";" + estadoDispositivo.getValueAt(estadoDispositivo.getSelectedRow(), 0).toString().trim() + ";"
                + "Ingreso Fallido" + ";" + (new Fecha()).imprimirFecha(), "src/DocumentosGenerados/logs", true);
            Reestablecer();
        }
    }//GEN-LAST:event_btnLoginActionPerformed
    /**
     * @author Julio Bodero Funcion que valida si el usuario ha ingresado en las
     * cajas de texto su usuario, contraseña y la seleccion de un dispositivo
     */
    private boolean IngresoValido() {
        if (txtUsuario.getText().length() == 0 && txtContra.getText().length() == 0 && estadoDispositivo.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this.jPanel2, "Ingrese Usuario, Contraseña Y seleccione Dispositivo");
            return false;
        } else {
            if (txtUsuario.getText().length() == 0) {
                JOptionPane.showMessageDialog(this.jPanel2, "Ingrese Usuario");
                return false;
            }
            if (txtContra.getText().length() == 0) {
                JOptionPane.showMessageDialog(this.jPanel2, "Ingrese Contraseña");
                Archivos.escribirDatos(txtUsuario.getText() + ";"
                        + "Falta Informacion" + ";" + (new Fecha()).imprimirFecha(), "src/DocumentosGenerados/logs", true);
                return false;
            }
            if (estadoDispositivo.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this.jPanel2, "Seleccione Dispositivo");
                Archivos.escribirDatos(txtUsuario.getText() + ";"
                        + "Falta Informacion" + ";" + (new Fecha()).imprimirFecha(), "src/DocumentosGenerados/logs", true);
                return false;
            }
        }

        return true;
    }

    /**
     * @author Julio Bodero Funcion que pone en blanco los datos ingresados en
     * las cajas de texto
     */
    private void Reestablecer() {
        txtContra.setText(null);
        txtUsuario.setText(null);

    }

    /**
     * @author Julio Bodero Funcion que llena las columnas de la tabla donde se
     * encuentran el nombre de los dispositivos y su estado.
     */
    private void llenarTablaEncendidos() {
        try {
            for (Dispositivo dispo : h2.getListaDispositivo()) {
                llenarTableroDispositivo(dispo);
            }
        } catch (Exception e) {
        }

    }
    private void llenarBaseDatosDispositivo() {
        try {
            if(HiloServidorCaido.ServerBaseDatosCaido){
                return;
            }
            for (Dispositivo dispo : h2.getListaDispositivo()) {
                crearDispositivo(dispo);              
            }
        } catch (Exception e) {
        }

    }

    /**
     * Funcion que inicializa e inicia los hilos del sistema
     *
     * @author Julio Bodero
     */
    private void iniciarHilos() {
        this.h2 = new HiloDispositivo();
        this.h2.start();
        this.h1 = new HiloServidorCaido();
        this.h1.start();
    }

    /**
     * @author Julio Bodero Funcion que verifica cada 2 milisegundos el estado
     * de los dispositivos.
     */
    private void actualizarTabla() {
        Timer timer = new Timer(100, (ActionEvent e) -> {
            if (!this.h2.getListaDispositivo().isEmpty()) {
                llenarTablaEncendidos();
            }

        });
        timer.start();
    }
    private void actualizarBaseDatos() {
        Timer timer = new Timer(10000, (ActionEvent e) -> {
            if (!this.h2.getListaDispositivo().isEmpty()) {
                llenarBaseDatosDispositivo();
                System.out.println("Acualizado");
            }

        });
        timer.start();
    }

    private void IniciarRespaldos(Usuario us) {
        JOptionPane.showMessageDialog(this.jPanel2, "Bienvenido " + us.getNombre());
        //String resultado = SSH.ConectarSSh("admin","admin","192.168.1.1", 22, "show ip int bri");
        String seleccion = estadoDispositivo.getValueAt(estadoDispositivo.getSelectedRow(), 0).toString().trim();
        Archivos.guardarHistorialEvento(us.getUsuario(), (new Fecha()).imprimirFecha(), seleccion, "S-Correcto");
        variablesGlobales.USUARIO_ACTIVO = us.getNombre();
        variablesGlobales.DISPOSITIVO_ACTIVO = seleccion;
        variablesGlobales.DISPOSITIVO_DIRECCIONIP = buscarIPDispositivo(seleccion);
        Reestablecer();
        h2.stop();
        try {
            this.setVisible(false);
            VentanaGenRespaldos m1 = new VentanaGenRespaldos();
            m1.show();
        } catch (Exception e) {
        }
    }

    /**
     * Funcion que verifica si existe una fila con el dato ingresado
     *
     * @author Julio Bodero
     */
    private Boolean exiteFila(String dato) {
        if (dato == null) {
            return false;
        }
        if (dato.length() == 0) {
            return false;
        }
        for (int i = 0; i < estadoDispositivo.getRowCount(); i++) {
            String valor = estadoDispositivo.getValueAt(i, 0).toString().trim();
            if (valor.equals(dato)) {
                return true;
            }
        }
        return false;
    }

    /**
     * @author Julio Bodero Funcion busca un dispositivo en la tabla de
     * dispositivo y actualiza la fila del estado del dispositivo
     */
    private void reemplazarFila(Dispositivo dato) {
        if (dato == null) {
            return;
        }
        if (dato.getNombre().length() == 0) {
            return;
        }
        for (int i = 0; i < estadoDispositivo.getRowCount(); i++) {
            String valor = estadoDispositivo.getValueAt(i, 0).toString().trim();
            if (valor.equals(separaString(dato.getNombre()))) {
                estadoDispositivo.setValueAt(dato.getEstado(), i, 1);

            }
        }

    }

    /**
     * Funcion que separa la palabra hostname de una consulta ssh
     *
     * @param cadena
     * @return
     * @autor Eduardo Veintimilla
     */
    private String separaString(String cadena) {
        String lista[] = cadena.split(" ");
        for (int i = 0; i < lista.length; i++) {
            lista[i] = lista[i].replace(" ", "");
            lista[i] = lista[i].replace("\n", "");

        }
        return lista[1];
    }

    /**
     * @author Julio Bodero Funcion que busca la direccion ip de un dispositivo
     */
    private String buscarIPDispositivo(String nombre) {
        for (Dispositivo dispositivo : h2.getListaDispositivo()) {
            if (separaString(dispositivo.getNombre()).equals(nombre)) {
                return dispositivo.getDirip();
            }
        }
        return "";
    }

    private String obtenerSerie(String cadena) {
        String[] linea = cadena.split("\n");
        String[] linea2 = linea[0].split(",");
        String[] linea3 = linea2[2].split(":");
        return linea3[1].trim();
    }

    private void crearDispositivo(Dispositivo dispo) {
        if (!Archivos.existeDispositivo(dispo.getDirip())) {
            try {
                Archivos.guardarDispositivo(obtenerSerie(SSH.ConectarSSh("admin", "admin", dispo.getDirip(), 22, "show inventory | include SN")) + "-" + dispo.getDirip(),
                        separaString(dispo.getNombre()), dispo.getDirip());
            } catch (IllegalAccessException | JSchException | IOException ex) {

            }
        }
    }
    
    private void llenarTableroDispositivo(Dispositivo dispo) {
        if (!exiteFila(separaString(dispo.getNombre())) && dispo.getNombre().length() != 0) {
            DefaultTableModel modelo = (DefaultTableModel) estadoDispositivo.getModel();
            modelo.addRow(new Object[]{separaString(dispo.getNombre()), dispo.getEstado()});
            variablesGlobales.dispositivos.add(separaString(dispo.getNombre()));
        } else if (exiteFila(separaString(dispo.getNombre())) && dispo.getNombre().length() != 0) {
            reemplazarFila(dispo);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginRespaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginRespaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginRespaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginRespaldos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {

            new LoginRespaldos().setVisible(true);

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTable estadoDispositivo;
    private javax.swing.JLabel imgLogin;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelContra;
    private javax.swing.JLabel labelDispositivo;
    private javax.swing.JLabel labelUsuario;
    private org.edisoncor.gui.passwordField.PasswordField txtContra;
    private org.edisoncor.gui.textField.TextField txtUsuario;
    // End of variables declaration//GEN-END:variables

}
